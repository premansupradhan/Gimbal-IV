#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>
#include <Servo.h>
Adafruit_MPU6050 mpu;
Servo sx;
Servo sy;
Servo sz;

float w_x = 0, w_y = 0, w_z = 0; //angular velocity
float w_x_c = -0.22; //angular velocity x-direction calibration
float w_y_c = 1.76; //angular velocity y-direction calibration
float w_z_c = -3.47;
float r_x = 90, r_y = 90, r_z = 90; //angle rotated as detected by IMU
float w_x_p = 0, w_y_p = 0, w_z_p = 0;
float a_x = 0, a_y = 0, a_z = 0;

float kp = 10;
float kd = 1;
float ex,ey,ez;
float epx = 0, epy = 0, epz = 0;
int delay_time=50;
float anglex,angley,anglexp,anglexp2,angleyp,angleyp2,anglez,anglezp,anglezp2;
float ux,uy,uz;
void setup() {
  Serial.begin(9600);
  while (!Serial)
    delay(10); // will pause Zero, Leonardo, etc until serial console opens

  // Try to initialize!
  if (!mpu.begin()) {
    while (1) {
      delay(10);
    }
  }
  sx.attach(10);
  sy.attach(7);
  sz.attach(9);

}

void loop() {
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  w_x = g.gyro.x * (180/3.14);
  w_y = g.gyro.y * (180/3.14);
  w_z = g.gyro.z * (180/3.14);

  w_x -= w_x_c;
  w_y -= w_y_c;
  w_z -= w_z_c;

  a_x = (w_x - w_x_p)/delay_time;
  a_y = (w_y - w_y_p)/delay_time;

  r_x += (w_x * delay_time * 0.001) + (0.5*a_x*(delay_time * 0.001)*(delay_time * 0.001));
  r_y += (w_y * delay_time * 0.001) + (0.5*a_y*(delay_time * 0.001)*(delay_time * 0.001));
  r_z += (w_z * delay_time * 0.001) + (0.5*a_z*(delay_time * 0.001)*(delay_time * 0.001));

  ex = r_x;
  ey = r_y;
  ez = r_z;
  ux = kp*ex +kd*(ex-epx);
  uy = kp*ey +kd*(ey-epy);
  uz = kp*ez +kd*(ez-epz);
 anglex =  map(ux,100,1700,180,0);
 angley =  map(uy,-50,1800,70,110);
 anglez =  map(uz,50,1700,180,00);
  //Serial.print(ux);
  //Serial.print(",");
  if((anglexp2>=anglexp-0.1 && anglexp2<=anglexp+0.1)&&(anglexp>=anglex-0.1 && anglexp<=anglex+0.1)){
    anglex = 90;
  }
  if((angleyp2>=angleyp-0.1 && angleyp2<=angleyp+0.1)&&(angleyp>=angley-0.1 && angleyp<=angley+0.1)){
    angley = 90;
  }
  if(anglex>=85 && anglex<88){
    sx.write(85);
  }
  else if(anglex>=88 && anglex<=92){
    sx.write(90);
  }
  else if(anglex>92 && anglex<=97){
    sx.write(97);
  }
  else {
    sx.write(anglex);
  }
  if(angley>=85 && angley<89){
    sy.write(85);
  }
  else if(angley>=89 && angley<=92){
    sy.write(90);
  }
  else if(angley>92 && angley<=97){
    sy.write(97);
  }
  else {
    sy.write(angley);
  }
  if(anglez>=85 && anglez<89){
    sz.write(85);
  }
  else if(anglez>=89 && anglez<=92){
    sz.write(90);
  }
  else if(anglez>92 && anglez<=97){
    sz.write(97);
  }
  else {
    sz.write(anglez);
  }

  Serial.print(r_x);
  //Serial.print(',  ');
  //Serial.print(r_y);
  Serial.print(',');
  Serial.println(r_z);
  //Serial.print('  ');
  //Serial.print(anglex);
  //Serial.print(',  ');
  //Serial.print(angley);
  //Serial.print('  ');
  //Serial.println(anglez);

  

 // if (r_x -90 > 0) 
 //   {sx.write(120);}


 // else if(r_x-90<0)
//    {sx.write(60);}
//if (r_y -90 > 0) 
 // {sy.write(120);}


//else if (r_y-90<0)
 // {sy.write(60);}
  epx=ex;
  epy=ey;
  epz=ez;
  w_x_p = w_x;
  w_y_p = w_y;
  w_z_p = w_z;
  anglexp2=anglexp;
  anglexp = anglex;
  angleyp2=angleyp;
  angleyp = angley;
  anglezp2=anglezp;
  anglezp = anglez;
  delay(delay_time);
}
